pipeline {
    agent any   // la directiva "agent" instruye a jenkins de alocar un ejecutor (node) y workspace para la Pipeline 

    environment {   // la section environment es usada para almacenar y declarar todas las 
                    // variables de entorno de nuestra pipeline

        VAR_NAME='value' // se declara igual que una variable en Linux
    }

    stages {    // "stages" se podria decir que es un codeblock donde viviran los "stage"
        
        stage('Build') {    // "stage" una etapa del pipeline, en este caso la etapa "Build", puede haber muchos mas "stages"
            
            steps {     // la secccion "step" define una serie de acciones a ejecutar dentro en una directiva "stage"
                
                cleanWs() // "cleanWs()" es una funcion que limpia el worksapce de nuestra pipeline
                
                echo 'Building a new laptop...'
                
                sh 'mkdir -p build' // "sh o shell step" es usado para ejecutar un shell command

                sh '''              
                    echo "comando 1"
                    echo "comando 2"
                '''                 // para combinar muchos comandos 'sh' en uno solo se puede usar el anterior formato 
                                    // con los " ''' "
            }
        }

        stage('test') {     // otra stage, la stages se corren sincronicamente
            ...
        }

        stage('con docker') { // Usar docker como ambiente en nuestra pipeline 
            agent { 

                docker { // Docker es usado para no tener que instalar dependencias en el jenkins controller, cualquier
                         // dependencia o herramiento que puede ser empacada en Docker se podra usar facilmente en nuestra
                         // pipeline haciendo pocos cambios a nuestro Jenkinsfile    
                    
                    image 'node:18-alipe' // Podemos usar una docker image como nuestro ambiente de ejecucion
                                          // para una stage en particular o la pipeline entera

                    reuseNode true // "reuseNode true" es usado para usar el mismo nodo declarado en al comienzo de la pipeline
                                   // en este caso "any" en vez de crear un nuevo nodo para esta stage

                                   // En otras palabras ejectura el container el node especificado en la directiva "agent any",
                                   // compartiendo el mismo workspace en vez de ejectuarce en un nuevo nodo y workspace 
                }
            }

            steps {
                sh 'echo "con docker"'
                sh 'dcoker --version' // podemos usar comandos de docker en nuestra pipeline que de otro modo no podriamos
                                      // amenos que instalemos dependencias en Jenkins
            }
        }
    }
    
    post { // "post", es una seccion donde van todos los post actions, esta seccion se ejecuta siempre al final de 
           // la pipeline

        success {   // "success" es un post action que solo se ejectua cuando la pipeline sea ha completado con exito


         archiveArtifacts artifacts: 'build/**'     // "arcvhieArtifacts" guarda los archivos built que incluyen el 
                                                    // patron proveido, en este caso "build/**", en el jenkins controller
                                                    // para que su extraccion despues                              
        }
    }
}
